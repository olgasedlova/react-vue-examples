<template>
    <md-card>
        <md-card-header>
            <div class="md-title">Sign up</div>
        </md-card-header>

        <md-card-content>
            <form @submit.prevent="send($event)" action="/user/login" method ="post" class="form-signin">
                <md-input-container :class="errorEmailClassObject">
                    <label>Email</label>
                    <md-input name="email" type="text" v-model="user.email"></md-input>

                    <span v-if="errors.email" class="md-error">{{errors.email[0]}}</span>
                </md-input-container>
                <md-input-container md-has-password :class="errorPasswordClassObject">
                    <label>Password</label>
                    <md-input v-model="user.password" type="password" name="password"></md-input>

                    <span v-if="errors.password" class="md-error">{{errors.password[0]}}</span>
                </md-input-container>
                <md-button type="submit" class="md-raised">Sign in</md-button>
                <md-button class="md-raised">
                    <router-link to="register">Sign up</router-link>
                </md-button>
            </form>
        </md-card-content>
    </md-card>
</template>

<script>
    export default {
        data() {
            return {
                user: {
                    email: '',
                    password: ''
                },
                errors: {}
            }
        },
        methods: {
            eye() {
                this.typePass = !this.typePass;
            },
            send (e) {
                var self = this;
                axios.post(e.target.action, {
                    email: this.user.email,
                    password: this.user.password
                }).then(function (response) {
                    if (response.data.error) {
                        self.errors = response.data.error;
                    } else {
                        location.reload();
                    }
                });
            }
        },
        computed: {
            errorEmailClassObject: function () {
                return {
                    'md-input-invalid': this.errors.email
                }
            },
            errorPasswordClassObject: function () {
                return {
                    'md-input-invalid': this.errors.password
                }
            }
        }
    }
</script>

<style>
</style>